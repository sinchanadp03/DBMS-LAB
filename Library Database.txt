-----------------------------:Library Database------------------------------

2.Consider the following schema for a Library Database
Consider the following schema for a Library Database:
BOOK(Book_id:varchar, Title:string, Publisher_Name:string, Pub_Year:integer)
BOOK_AUTHORS(Book_id:varchar, Author_Name:string)
PUBLISHER(Name:string, Address:string, Phone:integer)
BOOK_COPIES(Book_id:varchar, Programme_id:varchar, No-of_Copies:integer)
BOOK_LENDING(Book_id:varchar, Programme_id:varchar, Card_No:varchar, Date_Out:date, 
Due_Date:date)
LIBRARY_PROGRAMME(Programme_id:varchar, Programme_Name:string, Address:string)



CREATE TABLE PUBLISHER (
NAME VARCHAR(20) PRIMARY KEY,
ADDRESS VARCHAR(20),
PHONE int(10));

INSERT INTO PUBLISHER VALUES('Pearson', 'London', 9874522224);
INSERT INTO PUBLISHER VALUES('TataMcGraw', 'NewYork', 9858523565);
INSERT INTO PUBLISHER VALUES('Oxford', 'UK', 9885121112);
INSERT INTO PUBLISHER VALUES('Cambridge', 'UK', 9785634615);
INSERT INTO PUBLISHER VALUES('OReilly', 'California', 9994125455);

CREATE TABLE BOOK(
BOOK_ID VARCHAR(20) PRIMARY KEY,
TITLE VARCHAR(40),
PUBLISHER_NAME VARCHAR(20) REFERENCES PUBLISHER(NAME) ON DELETE CASCADE,
PUB_YEAR INT
);

INSERT INTO BOOK VALUES('B101', 'DBMS', 'Pearson', 2017);
INSERT INTO BOOK VALUES('B102', 'AIML', 'TataMcGraw', 2009);
INSERT INTO BOOK VALUES('B103', 'DCN', 'Pearson', 2017);
INSERT INTO BOOK VALUES('B104', 'ATC', 'Oxford', 2017);
INSERT INTO BOOK VALUES('B105', 'Python', 'OReilly', 2014);
INSERT INTO BOOK VALUES('B106', 'Hadoop', 'Pearson', 2000);

CREATE TABLE BOOK_AUTHORS(
BOOK_ID VARCHAR(20),
AUTHOR_NAME VARCHAR(20),
PRIMARY KEY(BOOK_ID, AUTHOR_NAME),
FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE
);

INSERT INTO BOOK_AUTHORS VALUES('B101', 'Elmarsi');
INSERT INTO BOOK_AUTHORS VALUES('B101', 'Navathe');
INSERT INTO BOOK_AUTHORS VALUES('B101', 'Ramakrishnan');
INSERT INTO BOOK_AUTHORS VALUES('B106', 'Douglas');
INSERT INTO BOOK_AUTHORS VALUES('B102', 'Elaine');
INSERT INTO BOOK_AUTHORS VALUES('B105', 'Srinivasan');


CREATE TABLE LIBRARY_PROGRAMME(
PROGRAMME_ID VARCHAR(20) PRIMARY KEY,
PROGRAMME_NAME VARCHAR(10),
ADDRESS VARCHAR(20));

INSERT INTO LIBRARY_PROGRAMME VALUES('L1','SAHYADRI','MANGALORE');
INSERT INTO LIBRARY_PROGRAMME VALUES('L2','SAPNA','MANGALORE');
INSERT INTO LIBRARY_PROGRAMME VALUES('L3','SANKALP','BANGALORE');
INSERT INTO LIBRARY_PROGRAMME VALUES('L4','PENGUIN','CHENNAI');
INSERT INTO LIBRARY_PROGRAMME VALUES('L5','AGNES','CHENNAI');

CREATE TABLE BOOK_COPIES(
BOOK_ID VARCHAR(20) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
PROGRAMME_ID VARCHAR(20) REFERENCES LIBRARY_PROGRAMME(PROGRAMME_ID) ON DELETE CASCADE,
NO_OF_COPIES INT(2),
PRIMARY KEY (BOOK_ID,PROGRAMME_ID));

INSERT INTO BOOK_COPIES VALUES('B101','L1',99);
INSERT INTO BOOK_COPIES VALUES('B102','L1',99);
INSERT INTO BOOK_COPIES VALUES('B102','L2',99);
INSERT INTO BOOK_COPIES VALUES('B103','L1',99);


CREATE TABLE BOOK_LENDING(
BOOK_ID VARCHAR(20),
PROGRAMME_ID VARCHAR(20),
CARD_NO VARCHAR(20),
DATE_OUT DATE,
DUE_DATE DATE,
PRIMARY KEY (PROGRAMME_ID, BOOK_ID, CARD_NO),
FOREIGN KEY(BOOK_ID)
REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
FOREIGN KEY (PROGRAMME_ID)
REFERENCES LIBRARY_PROGRAMME(PROGRAMME_ID) ON DELETE CASCADE);

INSERT INTO BOOK_LENDING VALUES('B101', 'L1', 'FA101', '02-JAN-21', '09-JAN-21');
INSERT INTO BOOK_LENDING VALUES('B101', 'L1', 'FA102', '02-MAR-23', '09-MAR-23');
INSERT INTO BOOK_LENDING VALUES('B102', 'L1', 'FA102', '02-MAR-23', '09-MAR-23');
INSERT INTO BOOK_LENDING VALUES('B101', 'L2', 'FA102', '02-MAR-23', '09-MAR-23');
INSERT INTO BOOK_LENDING VALUES('B101', 'L1', 'S103', '04-APR-22', '30-JUN-22');




QUERY 1:  .Retrieve details of all books in the library â€“ id, title, name of publisher, authors, number of copies in 
each Programme, etc.

SELECT B.BOOK_ID,TITLE,PUBLISHER_NAME,AUTHOR_NAME,NO_OF_COPIES 
FROM BOOK B, BOOK_AUTHORS A, BOOK_COPIES BC
WHERE B.BOOK_ID = BC.BOOK_ID AND B.BOOK_ID = A.BOOK_ID;



QUERY 2: 2.Get the particulars of borrowers who have borrowed more than 3 books, but from Jan 2023 to Jun 
2023.


SELECT CARD_NO FROM BOOK_LENDING
WHERE DATE_OUT
BETWEEN '01-JAN-2023' AND '30-JUN-2023'
GROUP BY CARD_NO HAVING COUNT(*)>=3;

QUERY 3: 3.Delete a book in the BOOK table. Update the contents of other tables to reflect this data manipulation 
operation.


DELETE FROM BOOK WHERE BOOK_ID='B103';

QUERY 4:4.Partition the BOOK table based on year of publication. Demonstrate its working with a simple query.


CREATE TABLE BOOK1 (
    BOOK_ID VARCHAR(20),
    TITLE VARCHAR(40),
    PUBLISHER_NAME VARCHAR(20) REFERENCES PUBLISHER(NAME) ON DELETE CASCADE,
    PUB_YEAR INT,
    PRIMARY KEY (BOOK_ID, PUB_YEAR)
)
PARTITION BY RANGE (PUB_YEAR) (
    PARTITION p1 VALUES LESS THAN (2001),
    PARTITION p2 VALUES LESS THAN (2005),
    PARTITION p3 VALUES LESS THAN (2010),
    PARTITION p4 VALUES LESS THAN (MAXVALUE)
);


INSERT INTO BOOK1 VALUES ('B101','DBMS','Pearson',2017);
INSERT INTO BOOK1 VALUES ('B102','AIML','TataMcGraw',2009);
INSERT INTO BOOK1 VALUES ('B103','DCN','Pearson',2017);
INSERT INTO BOOK1 VALUES ('B104','ATC','Oxford',2017);
INSERT INTO BOOK1 VALUES ('B105','Python','OReilly',2014);
INSERT INTO BOOK1 VALUES ('B106','Hadoop','Pearson',2000);


SELECT * FROM BOOK1 PARTITION(P1);
SELECT * FROM BOOK1 PARTITION(P2);
SELECT * FROM BOOK1 PARTITION(P3);
SELECT * FROM BOOK1 PARTITION(P4);


QUERY 5: Create a view of all books and its number of copies that are currently available in the Library
CREATE VIEW AVAILABLE_BOOK
AS
SELECT B.BOOK_ID, B.TITLE, 
   SUM(BC.NO_OF_COPIES) - (SELECT COUNT(*) 
      FROM BOOK_LENDING BL 
      WHERE BL.BOOK_ID = B.BOOK_ID  
      GROUP BY BL.BOOK_ID) AS BOOKS_AVAILABLE  
   FROM BOOK B, BOOK_COPIES BC
   WHERE B.BOOK_ID = BC.BOOK_ID 
   GROUP BY B.BOOK_ID, B.TITLE;


SELECT * FROM AVAILABLE_BOOK;
